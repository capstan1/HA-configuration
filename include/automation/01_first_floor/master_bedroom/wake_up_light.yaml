id: 2dace347-96e1-4ea3-a823-e15299c0b99f
alias: "F1M ğŸ›Œ Wake-up Light"
mode: single
max_exceeded: silent
trigger:
  - platform: template
    value_template: >
      {%- if states('sensor.slaapkamer_hub_alarms') in ['unknown', 'unavailable'] %}
        False
      {%- else %}
        {{ 
              now() >= 
              (states('sensor.slaapkamer_hub_alarms') | as_datetime)
                - timedelta(minutes = states('input_number.wakeup_start')|int)
        }}
      {%- endif %}
condition:
  - alias: "Light off?"
    condition: state
    entity_id: light.slaapkamer
    state: "off"
  - alias: "Wake up light enabled?"
    condition: state
    entity_id: input_boolean.wakeup_enabled
    state: "on"
  - alias: "Home Assistant utime > 5 minutes"
    condition: template
    value_template: "{{ (now() | as_timestamp - states('sensor.home_assistant_uptime') | as_timestamp) / 60 > 5 }}"
action:
  - alias: "Light on dimmed"
    service: light.turn_on
    target:
      entity_id: light.slaapkamer
    data:
      brightness: 1
      # color_temp: "{{ state_attr('light.slaapkerm', 'max_mireds') | int(650) }}"
  - alias: "Turn on light using transition"
    service: light.turn_on
    target:
      entity_id: light.slaapkamer
    data:
      brightness: 190
      # color_temp: 375
      transition: "{{ (states('input_number.wakeup_start') | int(20) + states('input_number.wakeup_end') | int(20)) * 60 }}"
  - alias: "Delay for last step during transtion"
    delay: "{{ (states('input_number.wakeup_start') | int(20) + states('input_number.wakeup_end') | int(20)) * 60 }}"
  - alias: "Turn on input boolean"
    service: input_boolean.turn_on
    target:
      entity_id: input_boolean.dimmed_slaapkamer
